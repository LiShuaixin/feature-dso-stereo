{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"key",
				"keypoint	(ORBextractor.cpp)"
			],
			[
				"core",
				"core.hpp	(HessianBlocks.h)"
			],
			[
				"fh",
				"fh_right"
			],
			[
				"allFrameHess",
				"allFrameHessianRightHistory	(FullSystem.h)"
			],
			[
				"FrameSh",
				"FrameHessian	(HessianBlocks.h)"
			],
			[
				"extr",
				"extrapFac"
			],
			[
				"string",
				"stringTofloat"
			],
			[
				"hi",
				"highgui.hpp	(FullSystem.cpp)"
			],
			[
				"imp",
				"imgproc	(FullSystem.cpp)"
			],
			[
				"open",
				"opencv2	(FullSystem.cpp)"
			],
			[
				"ope",
				"opencv2	(FullSystem.cpp)"
			],
			[
				"save",
				"saveResult"
			],
			[
				"fr",
				"frameID"
			],
			[
				"Matrix",
				"Matrix3d"
			],
			[
				"point",
				"points2"
			],
			[
				"HC",
				"Hcalib"
			],
			[
				"match",
				"matches"
			],
			[
				"CameraLin",
				"CameraLink"
			],
			[
				"setti",
				"settingW	(settings.hpp)"
			],
			[
				"s",
				"settings.hpp"
			],
			[
				"vi",
				"vignetteMap"
			],
			[
				"ima",
				"imageSmallPhoto	cv::Mat"
			],
			[
				"imageSmall",
				"imageSmall"
			],
			[
				"co",
				"convertTo(OutputArray m, int rtype) const	void"
			],
			[
				"aff",
				"aff_g2l"
			],
			[
				"exposure",
				"exposureT"
			],
			[
				"ei",
				"eigen.hpp"
			],
			[
				"im",
				"imgproc	(main_live_slam.cpp)"
			],
			[
				"c",
				"c_str() const	const _CharT *"
			],
			[
				"CV_32",
				"CV_32FC1	macro"
			],
			[
				"ou",
				"outImage	(types.hpp)"
			],
			[
				"aff_g",
				"aff_g2l	AffLight"
			],
			[
				"ex",
				"exposureT"
			],
			[
				"ORB",
				"ORBextractor	(FullSystem.cpp)"
			],
			[
				"data",
				"dataset.h"
			],
			[
				"g2",
				"g2o_types_sba"
			],
			[
				"mat",
				"mat_l"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/FullSystem/HessianBlocks.h",
			"settings":
			{
				"buffer_size": 16378,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FullSystem/HessianBlocks.cpp",
			"settings":
			{
				"buffer_size": 7528,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FullSystem/FullSystemOptimize.cpp",
			"settings":
			{
				"buffer_size": 21182,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FullSystem/CoarseTracker.cpp",
			"settings":
			{
				"buffer_size": 53946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FullSystem/FullSystem.cpp",
			"settings":
			{
				"buffer_size": 79579,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FullSystem/Residuals.cpp",
			"settings":
			{
				"buffer_size": 9395,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 219.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"sublimeCla",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"sublimeclang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"rem",
				"Package Control: Remove Channel"
			]
		],
		"width": 560.0
	},
	"console":
	{
		"height": 272.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ren/work/fdso",
		"/home/ren/work/fdso/src",
		"/home/ren/work/fdso/src/FullSystem",
		"/home/ren/work/fdso/src/FullSystem/ORB",
		"/home/ren/work/fdso/src/util",
		"/home/ren/work/fdso/thirdparty"
	],
	"file_history":
	[
		"/home/ren/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/ren/work/fdso/src/FullSystem/CoarseInitializer.cpp",
		"/home/ren/work/fdso/src/FullSystem/FullSystem.h",
		"/home/ren/work/fdso/src/FullSystem/FullSystemOptimize.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/EnergyFunctional.cpp",
		"/home/ren/work/fdso/src/util/settings.cpp",
		"/home/ren/work/fdso/src/util/settings.h",
		"/home/ren/work/fdso/src/FullSystem/Residuals.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/ORBextractor.cpp",
		"/home/ren/work/fdso/src/FullSystem/ORB/ORBmatcher.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/ORBmatcher.cpp",
		"/home/ren/work/fdso/src/util/ImageAndExposure.h",
		"/home/ren/work/fdso/src/OptimizationBackend/EnergyFunctional.h",
		"/home/ren/work/fdso/src/util/FrameShell.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/SparseImageAlign.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/SparseImageAlign.cpp",
		"/home/ren/work/fdso/src/FullSystem/CoarseTracker.cpp",
		"/home/ren/work/fdso/src/FullSystem/FullSystemMarginalize.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/AccumulatedSCHessian.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/AccumulatedTopHessian.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/AccumulatedTopHessian.h",
		"/home/ren/work/fdso/src/OptimizationBackend/EnergyFunctionalStructs.h",
		"/home/ren/work/fdso/src/FullSystem/Residuals.cpp",
		"/home/ren/work/fdso/src/FullSystem/HessianBlocks.h",
		"/home/ren/work/fdso/src/FullSystem/ResidualProjections.h",
		"/home/ren/work/fdso/src/FullSystem/FullSystem.cpp",
		"/home/ren/work/fdso/src/FullSystem/HessianBlocks.cpp",
		"/home/ren/work/fdso/src/FullSystem/ORB/FeatureDetector.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/FeatureDetector.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/RawResidualJacobian.h",
		"/home/ren/work/fdso/src/util/NumType.h",
		"/home/ren/work/fdso/src/FullSystem/ImmaturePoint.cpp",
		"/home/ren/work/fdso/src/FullSystem/FullSystemOptPoint.cpp",
		"/home/ren/work/fdso/src/FullSystem/ORB/NLSSolver.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/Converter.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/OptimizerPnP.cpp",
		"/home/ren/work/fdso/src/FullSystem/ORB/OptimizerPnP.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/CVUtils.h",
		"/home/ren/work/fdso/src/util/globalCalib.cpp",
		"/home/ren/work/fdso/src/FullSystem/ORB/RobustCost.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/NLSSolver_impl.hpp",
		"/home/ren/work/fdso/src/test/myTracking.cpp",
		"/home/ren/work/fdso/src/FullSystem/CoarseTracker.h",
		"/home/ren/work/fdso/CMakeLists.txt",
		"/home/ren/work/fdso/src/main_dso_pangolin.cpp",
		"/home/ren/work/fdso/src/FullSystem/PixelSelector2.cpp",
		"/home/ren/work/fdso/src/FullSystem/camera.h",
		"/home/ren/work/fdso/src/FullSystem/ORB/ORBextractor.h",
		"/home/ren/work/fdso/build/run.sh",
		"/home/ren/work/fdso/src/util/globalFuncs.h",
		"/home/ren/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/ren/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
		"/home/ren/work/fdso/thirdparty/Sophus/sophus/se3.hpp",
		"/home/ren/work/fdso/src/FullSystem/PixelSelector.h",
		"/home/ren/work/fdso/src/OptimizationBackend/MatrixAccumulators.h",
		"/home/ren/work/fdso/src/OptimizationBackend/EnergyFunctionalStructs.cpp",
		"/home/ren/work/fdso/src/OptimizationBackend/AccumulatedSCHessian.h",
		"/home/ren/slam/dso1215/src/util/settings.cpp",
		"/home/ren/slam/dso1215/src/util/globalFuncs.h",
		"/home/ren/slam/dso1215/src/util/globalCalib.cpp",
		"/home/ren/slam/dso1215/src/util/globalCalib.h",
		"/home/ren/work/fdso/src/util/Undistort.cpp",
		"/home/ren/slam/dso1215/src/util/FrameShell.h",
		"/home/ren/slam/dso1215/src/util/DatasetReader.h",
		"/home/ren/slam/dso1215/src/util/ImageAndExposure.h",
		"/home/ren/slam/dso1215/src/util/IndexThreadReduce.h",
		"/home/ren/slam/dso1215/src/util/MinimalImage.h",
		"/home/ren/slam/dso1215/src/util/NumType.h",
		"/home/ren/work/fdso/src/FullSystem/PixelSelector2.h",
		"/home/ren/work/fdso/src/FullSystem/ImmaturePoint.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/EnergyFunctionalStructs.h",
		"/home/ren/work/fdso/src/FullSystem/CoarseInitializer.h",
		"/home/ren/slam/dso1215/src/IOWrapper/Pangolin/KeyFrameDisplay.cpp",
		"/home/ren/slam/dso1215/src/IOWrapper/OpenCV/ImageRW_OpenCV.cpp",
		"/home/ren/slam/dso1215/src/IOWrapper/OpenCV/ImageDisplay_OpenCV.cpp",
		"/home/ren/slam/dso1215/src/IOWrapper/Output3DWrapper.h",
		"/home/ren/slam/dso1215/src/IOWrapper/ImageRW.h",
		"/home/ren/slam/dso1215/src/IOWrapper/ImageRW_dummy.cpp",
		"/home/ren/slam/dso1215/src/IOWrapper/ImageDisplay_dummy.cpp",
		"/home/ren/slam/dso1215/src/IOWrapper/ImageDisplay.h",
		"/home/ren/slam/dso1215/src/util/Undistort.h",
		"/home/ren/slam/dso1215/src/util/nanoflann.h",
		"/home/ren/slam/dso1215/src/util/settings.h",
		"/home/ren/slam/dso1215/src/util/Undistort.cpp",
		"/home/ren/slam/dso1215/src/OptimizationBackend/RawResidualJacobian.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/MatrixAccumulators.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/EnergyFunctionalStructs.cpp",
		"/home/ren/slam/dso1215/src/OptimizationBackend/EnergyFunctional.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/EnergyFunctional.cpp",
		"/home/ren/slam/dso1215/src/OptimizationBackend/AccumulatedTopHessian.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/AccumulatedTopHessian.cpp",
		"/home/ren/slam/dso1215/src/OptimizationBackend/AccumulatedSCHessian.h",
		"/home/ren/slam/dso1215/src/OptimizationBackend/AccumulatedSCHessian.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/CoarseTracker.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/CoarseInitializer.h",
		"/home/ren/slam/dso1215/src/FullSystem/CoarseInitializer.cpp",
		"/home/ren/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/ren/slam/dso1215/src/FullSystem/FullSystemMarginalize.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/FullSystemOptPoint.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/FullSystemOptimize.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/Residuals.h",
		"/home/ren/slam/dso1215/src/FullSystem/ResidualProjections.h",
		"/home/ren/slam/dso1215/src/FullSystem/PixelSelector.h",
		"/home/ren/slam/dso1215/src/FullSystem/HessianBlocks.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/HessianBlocks.h",
		"/home/ren/slam/dso1215/src/FullSystem/ImmaturePoint.cpp",
		"/home/ren/slam/dso1215/src/FullSystem/ImmaturePoint.h",
		"/home/ren/slam/dso1215/src/FullSystem/Residuals.cpp",
		"/home/ren/slam/dso-master/src/FullSystem/ImmaturePoint.cpp",
		"/home/ren/slam/stereo_dso-master/src/FullSystem/ImmaturePoint.cpp",
		"/home/ren/work/fdso/src/util/IndexThreadReduce.h",
		"/home/ren/work/fdso/README.md",
		"/home/ren/catkin_ws/src/direct_edge_imu-master/src/types.h",
		"/home/ren/catkin_ws/src/fdso/src/settings.cpp",
		"/home/ren/catkin_ws/src/fdso/src/settings.hpp",
		"/home/ren/catkin_ws/src/fdso/src/types.hpp",
		"/home/ren/catkin_ws/src/fdso/main_live_slam.cpp",
		"/home/ren/catkin_ws/src/fdso/src/types.cpp",
		"/home/ren/catkin_ws/src/fdso/CMakeLists.txt",
		"/home/ren/catkin_ws/src/fdso/src/myMath.hpp",
		"/home/ren/catkin_ws/src/direct_edge_imu-master/src/rosPub.h",
		"/home/ren/catkin_ws/catkin_ws.sublime-project",
		"/home/ren/catkin_ws/src/direct_edge_imu-master/main_live_odometry.cpp",
		"/home/ren/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/ren/work/fdso/src/IOWrapper/OpenCV/ImageDisplay_OpenCV.cpp",
		"/home/ren/work/fdso/src/util/MinimalImage.h",
		"/home/ren/work/fdso/src/IOWrapper/ImageDisplay.h",
		"/home/ren/slam/fdso/src/FullSystem/FullSystem.cpp"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 138.0,
		"where_history":
		[
			"/home/ren/work/fdso/src/",
			"/home/ren/slam/fdso/src/FullSystem,/home/ren/work/fdso/src/IOWrapper",
			"/home/ren/slam/fdso/src/FullSystem",
			"/home/ren/slam/dso1215/src",
			"/home/ren/slam/dso1215/src/FullSystem"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"RE-TRACK ATTEMPT",
			"delete",
			"fh",
			"frameHessiansRight",
			"allFrameHistory",
			"frameHessians",
			"frameHessiansRight",
			"WarpPatchSize",
			"_features",
			"FrameShell",
			"cur_frame_",
			"ref_frame_",
			"applyRes_Reductor",
			"SOLVER_STEPMOMENTUM",
			"backupState",
			"loadSateBackup",
			"backupState",
			"backupLastStep",
			"backupState",
			"loadSateBackup",
			"doStepFromBackup",
			"mnumOptIts",
			"calcLEnergy",
			"calcMEnergy",
			"lastEnergyL",
			"lastEnergyM",
			"calcLEnergy",
			"calcLEnergyF_MT",
			"canbreak",
			"mnumOptIts",
			"applyRes_Reductor",
			"calcLEnergy",
			"linearizeAll",
			"linearizeAll_Reductor",
			"lastEnergyR",
			"linearizeAll",
			"setNewFrameEnergyTH",
			"frameEnergyTH",
			"energyLeft",
			"weights",
			"setting_outlierTH",
			"color",
			"dIl",
			"centerProjectedTo",
			"activatePointsMT",
			"makeIDX",
			"activatePointsMT",
			"activatePointsMT_Reductor",
			"new PointHessian",
			"optimized",
			"toOptimize",
			"FullSystem::activatePointsMT",
			"activatePointsMT_Reductor",
			"optimizeImmaturePoint",
			"PointHessian",
			"INACTIVE",
			"pointHessians",
			"pointHessians.pop_back",
			"pointHessians.pop_back()",
			"pointHessiansOut",
			"removeOutliers",
			"PS_DROP",
			"PS_MARGINALIZE",
			"PS_DROP",
			"PS_MARGINALIZE",
			"pointHessiansMarginalized",
			"pointHessiansOut",
			"potentialPointHessians",
			"PointHessian:",
			"makeNewTraces",
			"pointHessians",
			"CalibHessian",
			"match",
			"frame",
			"_pyramid_level",
			"find_feature_matches",
			"mpORBextractorLeft",
			"pixelSelector",
			"PixelSelector",
			"addA",
			"SCALE_A_INVERSE",
			"SCALE_A",
			"buf_warped_refColor",
			"buf_warped_idepth",
			"saveResult",
			"buf_warped_dx",
			"hitColor",
			"save",
			"lastRef",
			"save",
			"numTermsInE",
			"lastF_2_fh",
			"save",
			"levelCutoffRepeat",
			"calcRes",
			"resOld",
			"resNew",
			"calcRes",
			"lambdaExtrapolationLimit",
			"calcGSSSE",
			"buf_warped_weight",
			"buf_warped_dx",
			"calcGSSSE",
			"lpc_color",
			"buf_warped_v",
			"v",
			"u",
			"save",
			"dINewl",
			"save",
			"sIdepth",
			"saveResult",
			"save",
			"saveResult",
			"minResForAbort",
			"lastResiduals",
			"lastF_2_fh_this",
			"save",
			"dIp",
			"dINewl",
			"hitColor",
			"dINewl",
			"newFrame->dIp",
			"save",
			"dINewl",
			"newFrame",
			"    \n",
			"incoming_id"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"FrameHessian",
			"sVector"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/FullSystem/HessianBlocks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16378,
						"regions":
						{
						},
						"selection":
						[
							[
								5600,
								5600
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										3081,
										3082
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4841.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/FullSystem/HessianBlocks.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7528,
						"regions":
						{
						},
						"selection":
						[
							[
								2846,
								2846
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3554,
										3555
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2282,
										2283
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3554,
										3555
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2282,
										2283
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2160.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/FullSystem/FullSystemOptimize.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21182,
						"regions":
						{
						},
						"selection":
						[
							[
								14188,
								14188
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										16243,
										16244
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										14077,
										14078
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										16243,
										16244
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										14077,
										14078
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12613.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/FullSystem/CoarseTracker.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53946,
						"regions":
						{
						},
						"selection":
						[
							[
								18395,
								18395
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										19367,
										19368
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										18160,
										18161
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										19367,
										19368
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										18160,
										18161
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12573.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/FullSystem/FullSystem.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 79579,
						"regions":
						{
						},
						"selection":
						[
							[
								11810,
								11810
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9117.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/FullSystem/Residuals.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9395,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6048.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 52.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.clang":
	{
		"height": 208.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 44.0
	},
	"pinned_build_system": "",
	"project": "fdso.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 271.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
